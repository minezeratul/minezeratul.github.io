<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Trie on Minezeratul</title>
    <link>https://minezeratul.github.io/tags/trie/</link>
    <description>Recent content in Trie on Minezeratul</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 16 May 2021 23:21:51 +0800</lastBuildDate><atom:link href="https://minezeratul.github.io/tags/trie/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Trie &amp; XOR</title>
      <link>https://minezeratul.github.io/p/ninth-blog/</link>
      <pubDate>Sun, 16 May 2021 23:21:51 +0800</pubDate>
      
      <guid>https://minezeratul.github.io/p/ninth-blog/</guid>
      <description>Leetcode 421 FineMaxXOR 5.16的题目 421. 数组中两个数的最大异或值
用到了 208. 实现 Trie (前缀树) algs4的chapter5.2
public class Trie { private Trie[] children; private boolean isEnd; public Trie() { children = new Trie[26];//字母表映射  isEnd = false; } //插入字符串 	//我们从字典树的根开始,插入字符串。对于当前字符对应的子节点,有两种情况 	//子节点存在。沿着指针移动到子节点,继续处理下一个字符。 	//子节点不存在。创建一个新的子节点,记录在children数组的对应位置上,  //然后沿着指针移动到子节点,继续搜索下一个字符。  public void insert(String word) { Trie node = this;//root  for (int i = 0; i &amp;lt; word.length(); i++) { char ch = word.charAt(i); int index = ch - &amp;#39;a&amp;#39;; if (node.</description>
    </item>
    
  </channel>
</rss>
